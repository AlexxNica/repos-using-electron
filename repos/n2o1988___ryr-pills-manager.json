{
  "id": 63227049,
  "name": "ryr-pills-manager",
  "fullName": "n2o1988/ryr-pills-manager",
  "owner": {
    "login": "n2o1988",
    "id": 10573340,
    "avatarUrl": "https://avatars.githubusercontent.com/u/10573340?v=3",
    "gravatarId": "",
    "url": "https://api.github.com/users/n2o1988",
    "htmlUrl": "https://github.com/n2o1988",
    "followersUrl": "https://api.github.com/users/n2o1988/followers",
    "subscriptionsUrl": "https://api.github.com/users/n2o1988/subscriptions",
    "organizationsUrl": "https://api.github.com/users/n2o1988/orgs",
    "reposUrl": "https://api.github.com/users/n2o1988/repos",
    "receivedEventsUrl": "https://api.github.com/users/n2o1988/received_events",
    "type": "User"
  },
  "private": false,
  "htmlUrl": "https://github.com/n2o1988/ryr-pills-manager",
  "description": "Ryanair Pills Manager",
  "fork": false,
  "url": "https://api.github.com/repos/n2o1988/ryr-pills-manager",
  "forksUrl": "https://api.github.com/repos/n2o1988/ryr-pills-manager/forks",
  "teamsUrl": "https://api.github.com/repos/n2o1988/ryr-pills-manager/teams",
  "hooksUrl": "https://api.github.com/repos/n2o1988/ryr-pills-manager/hooks",
  "eventsUrl": "https://api.github.com/repos/n2o1988/ryr-pills-manager/events",
  "tagsUrl": "https://api.github.com/repos/n2o1988/ryr-pills-manager/tags",
  "languagesUrl": "https://api.github.com/repos/n2o1988/ryr-pills-manager/languages",
  "stargazersUrl": "https://api.github.com/repos/n2o1988/ryr-pills-manager/stargazers",
  "contributorsUrl": "https://api.github.com/repos/n2o1988/ryr-pills-manager/contributors",
  "subscribersUrl": "https://api.github.com/repos/n2o1988/ryr-pills-manager/subscribers",
  "subscriptionUrl": "https://api.github.com/repos/n2o1988/ryr-pills-manager/subscription",
  "mergesUrl": "https://api.github.com/repos/n2o1988/ryr-pills-manager/merges",
  "downloadsUrl": "https://api.github.com/repos/n2o1988/ryr-pills-manager/downloads",
  "deploymentsUrl": "https://api.github.com/repos/n2o1988/ryr-pills-manager/deployments",
  "createdAt": "2016-07-13T08:05:41.000Z",
  "updatedAt": "2016-07-13T08:16:23.000Z",
  "pushedAt": "2016-08-29T18:22:12.000Z",
  "gitUrl": "git://github.com/n2o1988/ryr-pills-manager.git",
  "sshUrl": "git@github.com:n2o1988/ryr-pills-manager.git",
  "cloneUrl": "https://github.com/n2o1988/ryr-pills-manager.git",
  "svnUrl": "https://github.com/n2o1988/ryr-pills-manager",
  "homepage": null,
  "size": 931,
  "stargazersCount": 0,
  "watchersCount": 0,
  "language": "JavaScript",
  "hasIssues": true,
  "hasDownloads": true,
  "hasWiki": true,
  "hasPages": false,
  "forksCount": 0,
  "mirrorUrl": null,
  "openIssuesCount": 0,
  "openIssues": 0,
  "watchers": 0,
  "defaultBranch": "angularjs",
  "permissions": {
    "admin": false,
    "push": false,
    "pull": true
  },
  "license": {
    "key": "mit",
    "name": "MIT License",
    "spdxId": "MIT",
    "url": "https://api.github.com/licenses/mit",
    "featured": true
  },
  "networkCount": 0,
  "subscribersCount": 1,
  "status": 200,
  "packageJSON": {
    "name": "ryr-pills-manager",
    "productName": "Ryanair Pills Manager",
    "description": "A tool to help content team to maintain pills in the Parking drawer",
    "version": "0.2.0",
    "author": "Lamberto Fichera <fichera.lamberto@gmail.com>",
    "main": "app/index.js",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/n2o1988/ryr-pills-manager.git"
    },
    "keywords": [
      "pills",
      "electron",
      "debugger",
      "api",
      "angularjs"
    ],
    "config": {
      "id": "com.lworks.ryr-pills-manager",
      "ico": "assets/boilerplate.ico",
      "icns": "assets/boilerplate.icns",
      "png": "assets/boilerplate.png"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/n2o1988/ryr-pills-manager/issues"
    },
    "homepage": "https://github.com/n2o1988/ryr-pills-manager#readme",
    "scripts": {
      "postinstall": "npm run app-install && npm run electron-version && npm run rebuild",
      "start": "electron app/",
      "app-install": "cd app && npm install --no-optional",
      "electron-version": "cd build && node -e \"var electron = require('../node_modules/electron-prebuilt/package.json'); console.log(electron.version);\" > electron.version",
      "clean": "rimraf app/node_modules/",
      "clean:build": "rimraf build/*",
      "build:prepare": "npm run clean && npm run app-install && npm run electron-version",
      "build:linux": "npm run clean:build && npm run build:linux-ia32 -s && npm run build:linux-x64 -s",
      "build:linux-ia32": "npm run build:prepare && npm run rebuild:bash-ia32 && npm run package:linux-ia32 && npm run setup:linux-ia32",
      "build:linux-x64": "npm run build:prepare && npm run rebuild:bash-x64 && npm run package:linux-x64 && npm run setup:linux-x64",
      "build:osx": "npm run clean:build && npm run build:osx-app -s && npm run build:osx-mas -s",
      "build:osx-app": "npm run build:prepare && npm run rebuild:bash-x64 && npm run package:osx-app && npm run setup:osx-dmg",
      "build:osx-mas": "npm run build:prepare && npm run rebuild:bash-x64 && npm run package:osx-mas && npm run setup:osx-mas",
      "build:win32": "npm run clean:build && npm run build:win32-ia32 -s && npm run build:win32-x64 -s",
      "build:win32-ia32": "npm run build:prepare && npm run rebuild:win32-ia32 && npm run package:win32-ia32 && npm run setup:win32-ia32",
      "build:win32-x64": "npm run build:prepare && npm run rebuild:win32-x64 && npm run package:win32-x64 && npm run setup:win32-x64",
      "package:linux-ia32": "electron-packager app/ $npm_package_productName --arch ia32 --platform linux --app-version $npm_package_version --app-copyright \"Copyright (c) 2016 $npm_package_author_name\" --asar --icon $npm_package_config_png --prune --out build/",
      "package:linux-x64": "electron-packager app/ $npm_package_productName --arch x64 --platform linux --app-version $npm_package_version --app-copyright \"Copyright (c) 2016 $npm_package_author_name\" --asar --icon $npm_package_config_png --prune --out build/",
      "package:osx-app": "electron-packager app/ $npm_package_productName --arch x64 --platform darwin --app-version $npm_package_version --app-copyright \"Copyright (c) 2016 $npm_package_author_name\" --app-bundle-id $npm_package_config_id --asar --icon $npm_package_config_png --prune --out build/",
      "package:osx-mas": "electron-packager app/ $npm_package_productName --arch x64 --platform mas --app-version $npm_package_version --app-copyright \"Copyright (c) 2016 $npm_package_author_name\" --app-bundle-id $npm_package_config_id --asar --icon $npm_package_config_png --prune --out build/",
      "package:win32-ia32": "electron-packager app/ %npm_package_productName% --arch ia32 --platform win32 --app-version %npm_package_version% --app-bundle-id %npm_package_config_id% --app-copyright \"Copyright (c) 2016 %npm_package_author_name%\" --version-string.CompanyName=\"%npm_package_author_name%\" --version-string.ProductName=\"%npm_package_productName%\" --version-string.FileDescription=\"%npm_package_description%\" --asar --icon %npm_package_config_ico% --prune --out build/",
      "package:win32-x64": "electron-packager app/ %npm_package_productName% --arch x64 --platform win32 --app-version %npm_package_version% --app-bundle-id %npm_package_config_id% --app-copyright \"Copyright (c) 2016 %npm_package_author_name%\" --version-string.CompanyName=\"%npm_package_author_name%\" --version-string.ProductName=\"%npm_package_productName%\" --version-string.FileDescription=\"%npm_package_description%\" --asar --icon %npm_package_config_ico% --prune --out build/",
      "rebuild": "npm run rebuild:bash -s || npm run rebuild:win32 -s",
      "rebuild:bash": "export ELECTRON_VERSION=$(cat build/electron.version) && cd app/node_modules/leveldown && node-gyp rebuild --target=$ELECTRON_VERSION --dist-url=https://atom.io/download/atom-shell && mv build/Release/leveldown.node build/ && rimraf build/Release",
      "rebuild:bash-ia32": "export ELECTRON_VERSION=$(cat build/electron.version) && cd app/node_modules/leveldown && node-gyp rebuild --target=$ELECTRON_VERSION --arch=ia32 --dist-url=https://atom.io/download/atom-shell && mv build/Release/leveldown.node build/ && rimraf build/Release",
      "rebuild:bash-x64": "export ELECTRON_VERSION=$(cat build/electron.version) && cd app/node_modules/leveldown && node-gyp rebuild --target=$ELECTRON_VERSION --arch=x64 --dist-url=https://atom.io/download/atom-shell && mv build/Release/leveldown.node build/ && rimraf build/Release",
      "rebuild:win32": "SET /P ELECTRON_VERSION=<build/electron.version && cd app/node_modules/leveldown && node-gyp rebuild --target=%ELECTRON_VERSION% --dist-url=https://atom.io/download/atom-shell && copy build\\Release\\leveldown.node build && rimraf build/Release",
      "rebuild:win32-ia32": "SET /P ELECTRON_VERSION=<build/electron.version && cd app/node_modules/leveldown && node-gyp rebuild --target=%ELECTRON_VERSION% --arch=ia32 --dist-url=https://atom.io/download/atom-shell && copy build\\Release\\leveldown.node build && rimraf build/Release",
      "rebuild:win32-x64": "SET /P ELECTRON_VERSION=<build/electron.version && cd app/node_modules/leveldown && node-gyp rebuild --target=%ELECTRON_VERSION% --arch=x64 --dist-url=https://atom.io/download/atom-shell && copy build\\Release\\leveldown.node build && rimraf build/Release",
      "setup:linux-ia32": "electron-installer-debian --src build/Boilerplate-linux-ia32/ --dest dist/ --arch ia32 --config package-linux.json && electron-installer-redhat --src build/Boilerplate-linux-ia32/ --dest dist/ --arch ia32 --config package-linux.json",
      "setup:linux-x64": "electron-installer-debian --src build/Boilerplate-linux-x64/ --dest dist/ --arch amd64 --config package-linux.json && electron-installer-redhat --src build/Boilerplate-linux-x64/ --dest dist/ --arch amd64 --config package-linux.json",
      "setup:osx-dmg": "appdmg package-osx.json dist/Boilerplate-standalone-$npm_package_version.dmg",
      "setup:osx-mas": "appdmg package-osx.json dist/Boilerplate-mas-$npm_package_version.dmg",
      "setup:win32-ia32": "electron-installer-windows --src build/Boilerplate-win32-ia32/ --dest dist/win32 --arch ia32 --config package-win32.json",
      "setup:win32-x64": "electron-installer-windows --src build/Boilerplate-win32-x64/ --dest dist/win64 --arch amd64 --config package-win32.json"
    },
    "dependencies": {
      "devtron": "^1.1.0",
      "electron-packager": "^7.0.0",
      "electron-prebuilt": "^1.1.0",
      "node-gyp": "^3.3.0",
      "rimraf": "^2.5.2",
      "spectron": "^3.0.0"
    },
    "optionalDependencies": {
      "appdmg": "^0.4.0",
      "electron-installer-debian": "^0.3.0",
      "electron-installer-redhat": "^0.2.0",
      "electron-installer-windows": "^0.2.0"
    }
  },
  "packageStatus": 200
}