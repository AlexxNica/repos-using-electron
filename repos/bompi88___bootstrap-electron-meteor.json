{
  "id": 38900461,
  "name": "bootstrap-electron-meteor",
  "fullName": "bompi88/bootstrap-electron-meteor",
  "owner": {
    "login": "bompi88",
    "id": 3270628,
    "avatarUrl": "https://avatars.githubusercontent.com/u/3270628?v=3",
    "gravatarId": "",
    "url": "https://api.github.com/users/bompi88",
    "htmlUrl": "https://github.com/bompi88",
    "followersUrl": "https://api.github.com/users/bompi88/followers",
    "subscriptionsUrl": "https://api.github.com/users/bompi88/subscriptions",
    "organizationsUrl": "https://api.github.com/users/bompi88/orgs",
    "reposUrl": "https://api.github.com/users/bompi88/repos",
    "receivedEventsUrl": "https://api.github.com/users/bompi88/received_events",
    "type": "User"
  },
  "private": false,
  "description": "A template for simplifying the process of creating desktop apps with Electron and Meteor.",
  "fork": false,
  "createdAt": "2015-07-10T20:22:27.000Z",
  "updatedAt": "2016-01-15T13:25:21.000Z",
  "pushedAt": "2016-02-04T14:07:02.000Z",
  "homepage": null,
  "size": 4577,
  "stargazersCount": 0,
  "watchersCount": 0,
  "language": "JavaScript",
  "hasIssues": true,
  "hasDownloads": true,
  "hasWiki": true,
  "hasPages": false,
  "forksCount": 0,
  "openIssuesCount": 0,
  "openIssues": 0,
  "watchers": 0,
  "defaultBranch": "master",
  "permissions": {
    "admin": false,
    "push": false,
    "pull": true
  },
  "license": {
    "key": "mit",
    "name": "MIT License",
    "spdxId": "MIT",
    "url": "https://api.github.com/licenses/mit",
    "featured": true
  },
  "networkCount": 0,
  "subscribersCount": 1,
  "status": 200,
  "packageJSON": {
    "name": "ElectronMeteor",
    "version": "0.0.1",
    "main": "index.js",
    "devDependencies": {
      "shelljs": "^0.4.0",
      "colors": "^1.1.2",
      "adm-zip": "^0.4.7",
      "tar": "^2.1.1",
      "gunzip-maybe": "^1.2.1",
      "rimraf": "^2.4.1",
      "minimist": "^1.1.1",
      "fs-extra": "^0.22.1",
      "electron-prebuilt": "^0.27.2",
      "electron-rebuild": "^0.1.4",
      "electron-builder": "^2.0.0",
      "electron-packager": "^5.0.1"
    },
    "optionalDependencies": {
      "eslint": "^0.20.0"
    },
    "dependencies": {},
    "scripts": {
      "dev": "node scripts/run",
      "setup": "npm install && node scripts/setup",
      "clean:osx": "node scripts/clean --platform=darwin --arch=x64",
      "clean:win": "node scripts/clean --platform=win32 --arch=x86",
      "clean:linux": "node scripts/clean --platform=linux --arch=x86",
      "build:osx": "node scripts/download --platform=darwin --arch=x64 && node scripts/prepare --platform=darwin --arch=x64 && npm run clean:osx && electron-packager ./app \"ElectronMeteor\" --out=dist/osx/x64 --platform=darwin --arch=x64 --version=0.27.2 --icon=assets/icons/electronmeteor.icns --ignore=\"node_modules/(shelljs|colors|adm-zip|tar|gunzip-maybe|rimraf|minimist|fs-extra|electron-packager|electron-builder|electron-prebuilt|electron-rebuild)\"",
      "build:linux": "node scripts/download --platform=linux --arch=x64 && node scripts/prepare --platform=linux --arch=x64 && npm run clean:linux && electron-packager ./app \"ElectronMeteor\" --out=dist/linux/x64 --platform=linux --arch=x64 --version=0.27.2 --icon=assets/icons/electronmeteor.ico --ignore=\"node_modules/(shelljs|colors|adm-zip|tar|gunzip-maybe|rimraf|minimist|fs-extra|electron-packager|electron-builder|electron-prebuilt|electron-rebuild)\"",
      "build:win": "electron-packager ./app \"ElectronMeteor\" --out=dist/windows/x86 --platform=win32 --arch=ia32 --version=0.27.2 --icon=assets/icons/electronmeteor.ico --ignore=\"node_modules/(shelljs|colors|adm-zip|tar|gunzip-maybe|rimraf|minimist|fs-extra|electron-packager|electron-builder|electron-prebuilt|electron-rebuild)\"",
      "pack:osx": "electron-builder \"dist/osx/x64/ElectronMeteor-darwin-x64/ElectronMeteor.app\" --platform=osx --out=\"dist/osx/x64\" --config=packager.json",
      "pack:win": "electron-builder \"dist/windows/x86/ElectronMeteor-win32-ia32\" --platform=win --out=\"dist/windows/x86\" --config=packager.json",
      "osx": "npm run build:osx && npm run pack:osx",
      "linux": "npm run build:linux",
      "win": "npm run build:win && npm run pack:win"
    }
  },
  "packageStatus": 200
}